@model BusinessManager.Core.Models.Customer

@{
    ViewBag.Title = "Edit Customer";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h2>Edit Customer</h2>
    <hr />
    <style>
        .product-lookup-popup {
            z-index: 3;
            position: absolute;
            left: 0;
            top: 0;
        }
    </style>
    <div class="form-horizontal col-md-4">
        <div id="customer-info">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.UserId)

            @{
                var labelStyle = "width: 35%; padding-right: 0";
                var inputBoxStyle = "width: 100%; margin-left: 15px; margin-right: 0";
            }
            <div class="form-group">
                @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding-top: 5px">
                    @Html.DisplayFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } }).ToString().Replace("-07:00", "")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone2, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.Phone2, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.Phone2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-3", @style = @labelStyle })
                <div class="col-md-7" style="padding: 0">
                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", @style = @inputBoxStyle } })
                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-6">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
        <div id="product-lookup" class="product-lookup-popup" style="display: block">

            @*@Html.Partial("ProductLookup")*@

            <button onclick="saveNewLayawayItem()" class="btn btn-default">
                Add Item to Layawy
            </button>
        </div>
    </div>
    <div class="col-md-8 bg-success" style="padding: 0; margin: 0">
        @{
            var itemCount = 0;
            var layawayCount = Model.Layaways.Count;
            foreach (var layaway in Model.Layaways)
            {
                itemCount += layaway.LayawayItems.Count;
            }
            var fullName = Model.FirstName + ' ' + Model.LastName;
            var companyName = Model.CompanyName == "" ? "" : " (" + Model.CompanyName + ")";
            var combinedName = fullName + companyName;
        }
        <div style="margin: 0px 0px 5px 25px">
            <h4>Customer Layaways</h4>
            <strong><span class="text-primary" style="float: right; margin:3px 30px 3px 3px">@combinedName </span></strong>
            <span class="text-primary" style="float: right; margin:3px 10px 3px 3px">Customer: </span>
            <span style="margin:3px">Layaways: @Model.Layaways.Count</span>
            <span style="margin:3px">Total Items: @itemCount</span>
        </div>
        @Html.Partial("Layaways", Model.Layaways)
    </div>
}

<div class="col-md-10">
    @Html.ActionLink("Back to List", "Index")
</div>
@Html.Partial("AlertBox")

@section Scripts {
    <script type="text/javascript">
        function deleteLayawayItem(event, itemId, rowIndex) {
            ShowMessage("Click OK to delete item.", "<span class='text-danger'>Warning!<span>", "OkCancel").then(
                function (response) {
                    if (response === "OK") {
                        var xhttp = new XMLHttpRequest();
                        xhttp.onreadystatechange = function () {
                            if (this.readyState === 4 && this.status === 200) {
                                var responseText = this.responseText;
                                var responseObject = JSON.parse(responseText);
                                if (responseObject.Successful === true) {
                                    var parentRow = document.getElementById(rowIndex);
                                    parentRow.parentNode.removeChild(parentRow);
                                    ShowMessage("Item deleted.")
                                }
                                else if (responseObject.error) {
                                    message = responseObject.error;
                                    ShowMessage(message);
                                }
                            }
                        };
                        xhttp.open("GET", "/CustomerManager/DeleteLayawayItem/?id=" + itemId, true);
                        xhttp.send();

                    }
                },
                function (error) {
                    alert("Something went wrong!");
                }
            );
        }

        function showPic(event, image) {
            var location = window.location;
            var protocol = location.protocol;
            var host = location.host;
            var baseUrl = protocol + "//" + host
            var imageUrl = baseUrl + "//Content//ProductImages//" + image;
            var html = "<img " +
                "class='img-rounded' " +
                "src='" + imageUrl + "' " +
                "style='height: 200px' " +
                "alt='Image' " +
                " />"
            ShowMessage(html);
        }

        function openProductLookup() {
            event.preventDefault();
            document.getElementById("customer-info").style.display = "none";
            document.getElementById("product-lookup").style.display = "block";
        }

        function saveNewLayawayItem() {
            event.preventDefault();
            closeProductLookup();
        }

        function closeProductLookup() {
            event.preventDefault();
            document.getElementById("customer-info").style.display = "block";
            document.getElementById("product-lookup").style.display = "none";
        }
    </script>
}