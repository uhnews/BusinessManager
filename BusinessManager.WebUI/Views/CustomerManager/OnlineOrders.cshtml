@model IEnumerable<BusinessManager.Core.Models.OnlineOrder>

@{
    ViewBag.Title = "Online Orders";
    int onlineorderIndex = 0;
    int onlineorderCount = Model.Count();
    decimal onlineorderCharges = 0;
    decimal customerBalance = 0;
    decimal onlineorderPayments = 0;
    decimal onlineorderBalance = 0;
    string paymentNavBtnClass = "btn-pill-blue";

    string colorBGReceivableSourceDetail = "#dbe4ff";          // #fff5cc = yellow 2 
    string colorBGItemDetail = "#fafbff";                      // #fffcf0 = yellow 3
    ViewBag.ItemDetailBackgroundColor = colorBGItemDetail;
}

<table id="onlineorders-table" class="table">
    @foreach (var onlineorder in Model)
    {
        ++onlineorderIndex;
        ViewBag.ReceivableSourceIndex = onlineorderIndex;
        ViewBag.PaymentNavBtnClass = paymentNavBtnClass;
        string rowClass = onlineorderIndex > 1 ? "hidden" : "table-row-shown";

        onlineorderCharges = onlineorder.OnlineOrderItems.Sum(item => item.Quantity * item.Price);
        string onlineorderChargesStr = "$ " + String.Format("{0:#,##0.00}", onlineorderCharges);

        onlineorderPayments = onlineorder.OnlineOrderPayments.Sum(item => item.Amount);
        string onlineorderPaymentsStr = "$ " + String.Format("{0:#,##0.00}", onlineorderPayments);

        onlineorderBalance = onlineorderCharges - onlineorderPayments;
        string onlineorderBalanceStr = "$ " + String.Format("{0:#,##0.00}", onlineorderBalance);

        customerBalance += (onlineorderCharges - onlineorderPayments);
        string customerBalanceStr = String.Format("$ {0:#,##0.00}", customerBalance);

        <tr id="onlineorder-row" class="@rowClass">
            <td>
                <div class="col-md-12" style="display: flex; height: 625px">
                    @{
                        // Online Order Items table styling strings
                        string inputStyle = "display: inline; margin-left: 10px; width: 60%";
                        string inputGroupStyle = "margin: 1px 6px 1px 0px";
                        string buttonGroupStyle = "margin: 6px 6px 30x 6px";
                        string labelStyle = "width: 35%; text-align: right";
                    }
                    <style>
                        .CustomerManagerOnlineOrders-fixed-header tbody {
                            display: block;
                            overflow: auto;
                            height: 550px;
                            width: 100%;
                        }

                        .CustomerManagerOnlineOrders-fixed_header thead tr {
                            display: block;
                        }
                    </style>
                    <script>
                    </script>
                    <div id="onlineorder-edit" class="col-md-6" style="flex: 1; padding: 1em; background-color: @colorBGReceivableSourceDetail">
                        <form id="onlineorder-form">
                            <div name="onlineorder-customer-id" style="display: none">@onlineorder.CustomerId</div>
                            <div id="receivable-source-id" name="onlineorder-id" style="display: none">@onlineorder.Id</div>
                            <div style="@inputGroupStyle">
                                <label class="control-label invoice-label" style="@labelStyle">@Html.DisplayNameFor(m => m.CreatedAt)</label>
                                <span style="@inputStyle">
                                    @Html.DisplayFor(model => onlineorder.CreatedAt, new { htmlAttributes = new { @class = "form-control" } }).ToString().Replace("-07:00", "")
                                </span>
                            </div>
                            <div style="@inputGroupStyle">
                                <label onclick="focusMatchingInput('onlineorder_FirstName')" class="control-label invoice-label" style="@labelStyle">
                                    @Html.DisplayNameFor(model => model.FirstName)
                                </label>
                                @Html.EditorFor(model => onlineorder.FirstName, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control input-sm",
                                        @style = @inputStyle,
                                        @onchange = "showSubformSaveBtn(event)",
                                        @onkeyup = "showSubformSaveBtn(event)"
                                    }
                                })
                            </div>
                            <div style="@inputGroupStyle">
                                <label onclick="focusMatchingInput('onlineorder_LastName')" class="control-label invoice-label" style="@labelStyle">
                                    @Html.DisplayNameFor(model => model.LastName)
                                </label>
                                @Html.EditorFor(model => onlineorder.LastName, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control input-sm",
                                        @style = @inputStyle,
                                        @onchange = "showSubformSaveBtn(event)",
                                        @onkeyup = "showSubformSaveBtn(event)"
                                    }
                                })
                            </div>



                            <div style="@inputGroupStyle">
                                <label onclick="focusMatchingInput('onlineorder_Phone')" class="control-label invoice-label" style="@labelStyle">
                                    @Html.DisplayNameFor(model => model.Phone)
                                </label>
                                @Html.EditorFor(model => onlineorder.Phone, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control input-sm",
                                        @style = @inputStyle,
                                        @onchange = "showSubformSaveBtn(event)",
                                        @onkeyup = "showSubformSaveBtn(event)"
                                    }
                                })
                            </div>

                            <div style="@inputGroupStyle">
                                <label onclick="focusMatchingInput('onlineorder_Email')" class="control-label invoice-label" style="@labelStyle">
                                    @Html.DisplayNameFor(model => model.Email)
                                </label>
                                @Html.EditorFor(model => onlineorder.Email, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control input-sm",
                                        @style = @inputStyle,
                                        @onchange = "showSubformSaveBtn(event)",
                                        @onkeyup = "showSubformSaveBtn(event)"
                                    }
                                })
                            </div>

                            <div style="@inputGroupStyle">
                                <label onclick="focusMatchingInput('onlineorder_CompanyName')" class="control-label invoice-label" style="@labelStyle">
                                    @Html.DisplayNameFor(model => model.CompanyName)
                                </label>
                                @Html.EditorFor(model => onlineorder.CompanyName, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control input-sm",
                                        @style = @inputStyle,
                                        @onchange = "showSubformSaveBtn(event)",
                                        @onkeyup = "showSubformSaveBtn(event)"
                                    }
                                })
                            </div>
                            <div style="@inputGroupStyle">
                                <label onclick="focusMatchingInput('onlineorder_Street')" class="control-label invoice-label" style="@labelStyle">
                                    @Html.DisplayNameFor(model => model.Street)
                                </label>
                                @Html.EditorFor(model => onlineorder.Street, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control input-sm",
                                        @style = @inputStyle,
                                        @onchange = "showSubformSaveBtn(event)",
                                        @onkeyup = "showSubformSaveBtn(event)"
                                    }
                                })
                            </div>
                            <div style="@inputGroupStyle">
                                <label onclick="focusMatchingInput('onlineorder_City')" class="control-label invoice-label" style="@labelStyle">
                                    @Html.DisplayNameFor(model => model.City)
                                </label>
                                @Html.EditorFor(model => onlineorder.City, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control input-sm",
                                        @style = @inputStyle,
                                        @onchange = "showSubformSaveBtn(event)",
                                        @onkeyup = "showSubformSaveBtn(event)"
                                    }
                                })
                            </div>
                            <div style="@inputGroupStyle">
                                <label onclick="focusMatchingInput('onlineorder_State')" class="control-label invoice-label" style="@labelStyle">
                                    @Html.DisplayNameFor(model => model.State)
                                </label>
                                @Html.EditorFor(model => onlineorder.State, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control input-sm",
                                        @style = @inputStyle,
                                        @onchange = "showSubformSaveBtn(event)",
                                        @onkeyup = "showSubformSaveBtn(event)"
                                    }
                                })
                            </div>

                            <div style="@inputGroupStyle">
                                <label onclick="focusMatchingInput('onlineorder_ZipCode')" class="control-label invoice-label" style="@labelStyle">
                                    @Html.DisplayNameFor(model => model.ZipCode)
                                </label>
                                @Html.EditorFor(model => onlineorder.ZipCode, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control input-sm",
                                        @style = @inputStyle,
                                        @onchange = "showSubformSaveBtn(event)",
                                        @onkeyup = "showSubformSaveBtn(event)"
                                    }
                                })
                            </div>

                            <div style="@inputGroupStyle">
                                <label onclick="focusMatchingInput('onlineorder_OrderStatus')" class="control-label invoice-label" style="@labelStyle">
                                    @Html.DisplayNameFor(model => model.OrderStatus)
                                </label>
                                @Html.EditorFor(model => onlineorder.OrderStatus, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control input-sm",
                                        @style = @inputStyle,
                                        @onchange = "showSubformSaveBtn(event)",
                                        @onkeyup = "showSubformSaveBtn(event)"
                                    }
                                })
                            </div>

                            <div name="onlineorder-summary" style="position: relative; margin: 0px 0px 3px 0px">
                                <hr style="margin:  10px 0 0 0; border-width: 2px" />
                                <h5 style="margin: 0 0 3px 15px; text-decoration: underline; font-size: 15px">This Order </h5>
                                <div style="margin: 0 0 0 40px">
                                    <span>Total Charges: </span>
                                    <span name="transaction-charges"
                                          class="pull-right"
                                          style="margin-right: 25px">@onlineorderChargesStr</span>
                                </div>
                                <div style="margin: 0 0 0 40px">
                                    <span>Payments: </span>
                                    <span name="current-payments"
                                            class="pull-right"
                                            style="margin-right: 25px">@onlineorderPaymentsStr</span>
                                </div>
                                <div style="margin: 0 0 0 40px">
                                    <span>Balance: </span>
                                    <span name="current-balance"
                                            class="pull-right"
                                            style="margin-right: 25px">@onlineorderBalanceStr</span>
                                </div>
                                <h5 style="margin: 2px 0 2px 15px; text-decoration: underline; font-size: 15px">All Customer Orders</h5>
                                <div style="margin: 0 0 0 40px">
                                    <span name="customer-balance" class="hidden">@customerBalanceStr</span>
                                    <span>Amount Pending:</span>
                                    <span name="all-pending-transaction-charges"
                                            class="pull-right"
                                            style="margin-right: 25px"></span>
                                </div>
                                <hr style="margin: 0 0 10px 0; border-width: 2px" />
                            </div>

                            <div class="btn-group" style="@buttonGroupStyle">
                                <button type="button"
                                        name="subform-save"
                                        class="btn btn-sm btn-default btn-success-text hidden"
                                        onclick="saveSubformData(event, 'UpdateOnlineOrder', getUIOnlineOrderData)">
                                    <strong>Save</strong>
                                    <span style="margin-left: 5px" class="glyphicon glyphicon-edit"></span>
                                </button>
                                <button type="button"
                                        name="scan-upc"
                                        class="btn btn-sm btn-default margin-bottom-3"
                                        onclick="toggleBarcodeInput(event)">
                                    Scan Barcode
                                </button>
                                <button type="button"
                                        name="product-lookup"
                                        class="btn btn-sm btn-default margin-bottom-3"
                                        onclick="openProductLookup(event, '@onlineorder.Id', 'OnlineOrders')">
                                    Add Item
                                </button>
                                <button type="button"
                                        name="charge-items"
                                        class="btn btn-sm btn-default margin-bottom-3 hidden"
                                        onclick="showChargeItems(event)">
                                    Show Items
                                </button>
                                <div class="btn-group dropup">
                                    <button type="button"
                                            name="payments-menu"
                                            class="btn btn-sm btn-default dropdown-toggle" data-toggle="dropdown">
                                        Payments
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu" role="menu" style="padding: 0">
                                        <li>
                                            <button type="button"
                                                    name="payments-menu-add-payment"
                                                    class="btn btn-sm btn-default btn-block"
                                                    onclick="addPayment(event, 'onlineorders')">
                                                Add Payment
                                            </button>
                                        </li>
                                        <li>
                                            <button type="button"
                                                    name="payments-menu-show-payments"
                                                    class="btn btn-sm btn-default btn-block"
                                                    onclick="showPayments(event)">
                                                Edit Payments
                                            </button>
                                        </li>
                                        <li>
                                            <button type="button"
                                                    name="payments-menu-show-payment-list"
                                                    class="btn btn-sm btn-default btn-block"
                                                    onclick="showPaymentList(event)">
                                                Payment List
                                            </button>
                                        </li>
                                    </ul>
                                </div>
                                @{
                                    if (onlineorder.OnlineOrderItems.Count == 0)
                                    {
                                        <button type="button"
                                                class="btn btn-sm btn-default btn-danger-text margin-bottom-3"
                                                onclick="deleteOnlineOrder(event)">
                                            Delete
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="button"
                                                class="btn btn-sm btn-default btn-danger-text margin-bottom-3"
                                                disabled>
                                            Delete
                                        </button>
                                    }
                                }
                                <div name="upc-input-container" style="padding: 0" class="hidden">
                                    <span class="fas fa-barcode text-primary" style="font-size: 35px; margin: 0px -15px 0 0; padding: 0">&nbsp;&nbsp;</span>
                                    <input name="upc-input"
                                            type="text"
                                            class="form-control input-sm"
                                            style="display: inline; max-width: 70%; transform: translateY(-8px)"
                                            onkeypress="getProductByUPC(event, '@onlineorder.Id', 'OnlineOrder')" />
                                </div>
                            </div>
                        </form>
                    </div>
                    @{
                        var subItemInputStyle1 = "display: inline; max-width: 95%; margin: 0 0 5px 0";
                        var subItemInputStyle2 = "display: inline; max-width: 55%; margin: 0 0 5px 0";
                        var subItemLabelStyle = "display: inline; max-width: 35%; margin-right: 15px; margin-top: 10px; font-size: 90%";
                    }
                    <div id="sub-items-table" class="col-md-6 CustomerManagerOnlineOrders-fixed-header" style="flex: 1; background-color: @colorBGReceivableSourceDetail; padding-left: 0">
                        <h4 style="margin-left: 10px">Order Items</h4>
                        <table class="table">
                            @{
                                var itemsCount = onlineorder.OnlineOrderItems.Count;
                                var itemIndex = 0;
                                var rowElementId = "";
                            }
                            @foreach (var item in onlineorder.OnlineOrderItems)
                            {
                                ++itemIndex;
                                rowElementId = "row-" + onlineorderIndex + "-" + itemIndex;
                                <tr id=@rowElementId style="margin-top: 20px; background-color: @colorBGItemDetail">                                               
                                    <td style="position: relative">
                                        <div>
                                            <img onclick="popUpProductDetail('@item.ProductId')"
                                                    class="img-thumbnail"
                                                    style="width: 100px; cursor: pointer"
                                                    src="~/Content/ProductImages/@item.Image"
                                                    alt="Image" />
                                        </div>
                                        @* OnlineOrderItem delete button here *@
                                        <input id="onlineorder-item-delete"
                                                type="button"
                                                value="Delete"
                                                style="float: left; margin: 5px"
                                                class="btn btn-sm btn-default btn-danger-text"
                                                onclick="deleteOnlineOrderItem(event, '@item.Id', '@rowElementId', '@item.Image', '@item.ProductName')" />
                                    </td>
                                    <td>
                                        <div style="padding-top: 7px">
                                            <div name="onlineorderitem-item-id" style="display: none">@item.Id</div>
                                            <div name="onlineorderitem-product-id" style="display: none">@item.ProductId</div>
                                            <div name="onlineorderitem-quantity" style="display: none">@item.Quantity</div>
                                            <strong>
                                                @Html.DisplayFor(m => item.ProductName, new
                                                {
                                                    htmlAttributes = new
                                                    {
                                                        @class = "form-control",
                                                        @style = @subItemInputStyle1,
                                                        @readonly = "true"
                                                    }
                                                })
                                            </strong>
                                        </div>
                                        <div style="padding-top: 7px; width: 90%t">
                                            @Html.EditorFor(m => item.ProductDescription, new
                                            {
                                                htmlAttributes = new
                                                {
                                                    @class = "form-control input-sm",
                                                    @style = subItemInputStyle1,
                                                    @onkeyup = "showOnlineOrderItemSaveBtn(event)",
                                                    @onchange = "showOnlineOrderItemSaveBtn(event)",
                                                    @onpaste = "showOnlineOrderItemSaveBtn(event)",
                                                    @oncut = "showOnlineOrderItemSaveBtn(event)"
                                                }
                                            })
                                        </div>
                                        <div style="padding-top: 7px; width: 90%; text-align: right">
                                            @Html.EditorFor(m => item.Quantity, new
                                            {
                                                htmlAttributes = new
                                                {
                                                    @class = "form-control input-sm pull-right",
                                                    @style = subItemInputStyle2,
                                                    @onkeyup = "showOnlineOrderItemSaveBtn(event)",
                                                    @onchange = "showOnlineOrderItemSaveBtn(event)",
                                                    @onpaste = "showOnlineOrderItemSaveBtn(event)",
                                                    @oncut = "showOnlineOrderItemSaveBtn(event)"
                                                }
                                            })

                                            @Html.LabelFor(m => item.Quantity, htmlAttributes: new
                                            {
                                                @class = "control-label invoice-label pull-right",
                                                @for = "",
                                                @style = subItemLabelStyle,
                                                @onclick = "focusMatchingInput('item_Quantity')"
                                            })
                                        </div>
                                        <div style="margin-bottom: 5px; width: 90%; text-align: right">
                                            @Html.EditorFor(m => item.Price, new
                                            {
                                                htmlAttributes = new
                                                {
                                                    @class = "form-control input-sm pull-right",
                                                    @style = @subItemInputStyle2,
                                                    @onkeyup = "showOnlineOrderItemSaveBtn(event)",
                                                    @onchange = "showOnlineOrderItemSaveBtn(event)",
                                                    @onpaste = "showOnlineOrderItemSaveBtn(event)",
                                                    @oncut = "showOnlineOrderItemSaveBtn(event)"
                                                }
                                            })

                                            @Html.LabelFor(m => item.Price, htmlAttributes: new
                                            {
                                                @class = "control-label invoice-label pull-right",
                                                @for = "",
                                                @style = subItemLabelStyle,
                                                @onclick = "focusMatchingInput('item_Price')"
                                            })
                                        </div>
                                        <div style="margin-bottom: 5px; width: 100%">
                                            <span name="ProductDescriptionOldValue" class="hidden">@item.ProductDescription</span>
                                            <span name="QuantityOldValue" class="hidden">@item.Quantity</span>
                                            <span name="PriceOldValue" class="hidden">@item.Price</span>
                                            <p><label style="margin-right: 5px; width: 40%">Item Total </label><span name="line-total" class="text-primary">@(item.Quantity * item.Price)</span></p>
                                            <button name="onlineorder-item-save"
                                                    type="button"
                                                    style="margin: 0 0 3px 0"
                                                    class="btn btn-sm btn-default btn-success-text hidden"
                                                    onclick="updateOnlineOrderItem(event, '@item.Id')">
                                                <strong>Save</strong>
                                                <span style="margin-left: 5px" class="glyphicon glyphicon-edit"></span>
                                            </button>
                                            <div class="text-danger">
                                                <span name="onlineorderitems-row-number">@itemIndex</span> / <span name="onlineorderitems-row-count">@itemsCount</span>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>

                    <div id="new-payment"
                            class="col-md-6 CustomerManagerOnlineOrders-fixed-header hidden"
                            style="flex: 1; background-color: @colorBGReceivableSourceDetail; padding: 0 15px 0 0; margin: 0 0 0 0">
                        @Html.Partial("NewPayment")
                    </div>

                    <div id="payment-list-table"
                            class="col-md-6 CustomerManagerOnlineOrders-fixed-header hidden"
                            style="flex: 1; background-color: @colorBGReceivableSourceDetail; padding-left: 0">
                        @{
                            ViewBag.CurrReceivableSourceId = onlineorder.Id;
                            ViewBag.PaymentTableHeading = "Order Payments";
                        }
                        @Html.Partial("PaymentList", onlineorder.OnlineOrderPayments)
                    </div>

                    <div id="payments-table"
                            class="col-md-6 CustomerManagerOnlineOrders-fixed-header hidden"
                            style="flex: 1; background-color: @colorBGReceivableSourceDetail; padding-left: 0">
                        @{
                            ViewBag.CurrReceivableSourceId = onlineorder.Id;
                        }
                        @Html.Partial("Payments", onlineorder.OnlineOrderPayments)
                    </div>
                </div>

                @*  ################### RECORD NAVIGATION BUTTONS #####################  *@

                <div name="onlineorder-nav-group" class="text-danger" style="position: absolute; left: 25px; bottom: 4px; margin-top: 0">
                    Online Order <span id="subtable-row-number" name="onlineorders-table-row-number">@onlineorderIndex</span> of <span name="onlineorders-row-count" style="margin-right: 20px">@onlineorderCount</span>
                    <div style="display: inline">
                        <button type="button" class="btn-pill-blue" onclick="navFirst(event)">
                            <span class="glyphicon glyphicon-fast-backward"
                                    style="padding: 0 3px 0 3px" >
                            </span>
                        </button>
                        <button type="button" class="btn-pill-blue" onclick="navPrev(event)">
                            <span class="glyphicon glyphicon-arrow-left"
                                    style="padding: 0 3px 0 3px" >
                            </span>
                        </button>
                        <button type="button" class="btn-pill-blue" onclick="navNext(event)">
                            <span class="glyphicon glyphicon-arrow-right"
                                    style="padding: 0 3px 0 3px" >
                            </span>
                        </button>
                        <button type="button" class="btn-pill-blue" onclick="navLast(event)">
                            <span class="glyphicon glyphicon-fast-forward"
                                    style="padding: 0 3px 0 3px" >
                            </span>
                        </button>
                    </div>
                </div>
            </td>
        </tr>
     }
</table>