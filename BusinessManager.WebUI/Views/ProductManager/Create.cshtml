@model BusinessManager.Core.ViewModels.ProductManagerViewModel

@{
    ViewBag.Title = "Create Product";
}

    <h2>Create Product</h2>

@using (Html.BeginForm("Create", "ProductManager", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @{
            string labelWidth = "col-md-2";
            string fieldWidth = "col-md-4";
            string maxFieldWidth = "100%";
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxFieldWidth } })
                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxFieldWidth } })
                @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxFieldWidth } })
                @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.WholesalePrice, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                @Html.EditorFor(model => model.Product.WholesalePrice, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxFieldWidth } })
                @Html.ValidationMessageFor(model => model.Product.WholesalePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.SupplierPrice, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                @Html.EditorFor(model => model.Product.SupplierPrice, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxFieldWidth } })
                @Html.ValidationMessageFor(model => model.Product.SupplierPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Category, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class="col-md-4">
                @Html.DropDownListFor(
                    model => model.Product.Category, 
                    new SelectList(Model.ProductCategories, "Category", "Category"), 
                    htmlAttributes: new { @class = "control-label", @style = "width: 75%; max-width: " + @maxFieldWidth }
                )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Quantity, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                @Html.EditorFor(model => model.Product.Quantity, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxFieldWidth } })
                @Html.ValidationMessageFor(model => model.Product.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.QuantityMin, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                @Html.EditorFor(model => model.Product.QuantityMin, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxFieldWidth } })
                @Html.ValidationMessageFor(model => model.Product.QuantityMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.UPC, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                @Html.EditorFor(model => model.Product.UPC, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxFieldWidth } })
                @Html.ValidationMessageFor(model => model.Product.UPC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.ProductCode, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                @Html.EditorFor(model => model.Product.ProductCode, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxFieldWidth } })
                @Html.ValidationMessageFor(model => model.Product.ProductCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Image, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                <input type="file" id="file" name="file" class="form-control hidden" style="width: 100%; max-width: 100%" />
                <a class="btn btn-primary" href="#"><label style="margin-top: 3px; cursor: pointer" for="file"><span class="far fa-image" style="font-size: large">&nbsp;&nbsp;</span>Select New Image File</label></a>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.IsService, htmlAttributes: new { @class = "control-label " + @labelWidth })
            <div class=@fieldWidth>
                @Html.CheckBoxFor(model => model.Product.IsService, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.ValidationMessageFor(model => model.Product.IsService, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
