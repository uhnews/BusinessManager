@model IEnumerable<BusinessManager.Core.ViewModels.POSTransactionItemViewModel>

@{
    ViewBag.Title = "POS - Current Transaction";
}

<h2 style="display: inline-block">
    <span class="fas fa-cash-register text-primary">&nbsp;&nbsp;</span>Point of Sale (POS) - Current Transaction
</h2>

<h3>
    Enter UPC Barcode: <span class="fas fa-barcode"></span>&nbsp;&nbsp;<input style="display: inline" class="form-control" onkeypress="getProduct(event)" id="UPCBarcode" type="text" />
    <span class="text-danger" id="barcode-error-msg"></span>
</h3>

<table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UPC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            Line Total
        </th>
        <th></th>
    </tr>

    @{ int itemCount = 0; }
    @foreach (var item in Model)
    {
        <tr>
            <td><img style="height: 50px" class="img" src="~/Content/ProductImages/@item.Image" /></td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UPC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @String.Format("{0:c}", item.Price)
            </td>
            <td>
                @String.Format("{0:c}", item.Price * item.Quantity)
            </td>
            <td>
                <a href="@Url.Action("RemoveFromPOSTransaction", "POSTransaction", new { Id = item.Id })" class="btn btn-danger">Delete</a>
            </td>
        </tr>
        ++itemCount;
    }
    <tr>
        @if (itemCount > 0)
        {
            <td colspan="4" style="text-align: right"><strong>Sale Total</strong></td>
            <td>@String.Format("{0:c}", (from p in Model select p.Price * p.Quantity).Sum())</td>
            <td><a href="@Url.Action("Checkout", "POSTransaction")">Checkout</a></td>
        }
        else
        {
            <td colspan="4" style="text-align: right"><strong>Transaction Total</strong></td>
            <td>@String.Format("{0:c}", (from p in Model select p.Price * p.Quantity).Sum())</td>
            <td><span class="text-muted">Checkout</span></td>
        }
    </tr>
</table>

<hr>
<div>
    @*<a href="javascript: history.go(-1)" class="btn btn-primary badge badge-pill">&#8592;</a><span>&nbsp;&nbsp;</span>*@

    @{
        string baseUrl = string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"));
        string prevURL = Request.UrlReferrer == null ? "" : Request.UrlReferrer.ToString();
        if (prevURL == baseUrl)
        {
            <a href="javascript: history.go(-1)">Go To Product List</a>
        }
        else
        {
            <a href="@Url.Action("Index", "Home")">Go To Product List</a>
        }
    }
</div>

@section Scripts {
    <script type="text/javascript">

        document.getElementById("UPCBarcode").focus();

        function getProduct(event) {
            if (event.keyCode != 13) {
                return;
            };

            let barcode = document.getElementById("UPCBarcode").value;

            var xhttp = new XMLHttpRequest();
            xhttp.open("GET", "/POSTransaction/GetProduct/?barcode=" + barcode, true);
            xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
            xhttp.onreadystatechange = function () {
                if (this.readyState === 4 && this.status === 200) {
                    //
                    var responseText = this.responseText;
                    let product = JSON.parse(responseText);
                    if (product.Id) {
                        location.assign("/POSTransaction/AddToPOSTransaction/" + product.Id);
                    }
                    else {
                        document.getElementById("barcode-error-msg").innerText = "Product '" + barcode + "' not found.";
                    }
                }
            };
            xhttp.send();
        }

    </script>
}