@model BusinessManager.Core.Models.POSSale

@{
    ViewBag.Title = "POS Transaction Checkout";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>POS Transaction Checkout</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @{ 
            string labelWidth = "col-md-3";
            string fieldWidth = "col-md-8";
            string maxfieldWidth = "100%";
        }
        <div class="col-md-6">

            <div class="form-group d-none" style="display: none">
                <div>
                    @Html.Hidden("CustomerId")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " + @labelWidth })
                <div class=@fieldWidth>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxfieldWidth } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label " + @labelWidth })
                <div class=@fieldWidth>
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxfieldWidth } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label " + @labelWidth })
                <div class=@fieldWidth>
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxfieldWidth } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label " + @labelWidth })
                <div class=@fieldWidth>
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxfieldWidth } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label " + @labelWidth })
                <div class=@fieldWidth>
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxfieldWidth } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label " + @labelWidth })
                <div class=@fieldWidth>
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxfieldWidth } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label " + @labelWidth })
                <div class=@fieldWidth>
                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @style = "max-width: " + @maxfieldWidth } })
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">
                    <input type="submit" value="Proceed to Payment" class="btn btn-default" />
                </div>
            </div>
        </div>

        @* Customer list div *@
    <div class="col-md-6 bg-info" style="height: 600px; margin-left: -30px">
        @Html.Partial("Customers", Model.Customers)
    </div>
    </div>
}

<div class="col-md-12">
    @Html.ActionLink("Back to POS Screen", "Index")
</div>